/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import * as web3 from '@solana/web3.js'

/**
 * @category Instructions
 * @category InitPrice
 * @category generated
 */
export type InitPriceInstructionArgs = {
  expo_: number
  ptype_: number
}
/**
 * @category Instructions
 * @category InitPrice
 * @category generated
 */
export const initPriceStruct = new beet.BeetArgsStruct<
  InitPriceInstructionArgs & {
    instructionDiscriminator: number[] /* size: 8 */
  }
>(
  [
    ['instructionDiscriminator', beet.uniformFixedSizeArray(beet.u8, 8)],
    ['expo_', beet.i32],
    ['ptype_', beet.u32],
  ],
  'InitPriceInstructionArgs',
)
/**
 * Accounts required by the _initPrice_ instruction
 *
 * @property [_writable_, **signer**] funding_account
 * @property [_writable_, **signer**] price_account
 * @category Instructions
 * @category InitPrice
 * @category generated
 */
export type InitPriceInstructionAccounts = {
  funding_account: web3.PublicKey
  price_account: web3.PublicKey
}

export const InitPriceAccounts = ['funding_account', 'price_account']

export const initPriceInstructionDiscriminator = [2, 0, 0, 0, 9, 0, 0, 0]

export type InitPriceInstruction = {
  programId: web3.PublicKey
  keys: web3.AccountMeta[]
  data: Buffer
}

/**
 * Creates a _InitPrice_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category InitPrice
 * @category generated
 */
export function createInitPriceInstruction(
  accounts: InitPriceInstructionAccounts,
  args: InitPriceInstructionArgs,
): InitPriceInstruction {
  const { funding_account, price_account } = accounts

  const [data] = initPriceStruct.serialize({
    instructionDiscriminator: initPriceInstructionDiscriminator,
    ...args,
  })
  const keys: web3.AccountMeta[] = [
    {
      pubkey: funding_account,
      isWritable: true,
      isSigner: true,
    },
    {
      pubkey: price_account,
      isWritable: true,
      isSigner: true,
    },
  ]

  const ix: InitPriceInstruction = new web3.TransactionInstruction({
    programId: new web3.PublicKey('NONE'),
    keys,
    data,
  })
  return ix
}
